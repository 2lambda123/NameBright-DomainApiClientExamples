<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:tns="https://api.namebright.com" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="DomainManagement" targetNamespace="https://api.namebright.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsp:Policy wsu:Id="BasicHttpsBinding_IDomainManagement_policy">
    <wsp:ExactlyOne>
      <wsp:All>
        <sp:TransportBinding xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken RequireClientCertificate="false" />
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:Basic256 />
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict />
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="https://api.namebright.com" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" />
      <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
      <xs:import namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib" />
      <xs:element name="GetAccountDomains">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainsPerPage" type="xs:int" />
            <xs:element minOccurs="1" name="page" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAccountDomainsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q1="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="GetAccountDomainsResult" nillable="true" type="q1:AccountSearchResult" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAccountDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAccountDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q2="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="GetAccountDomainResult" nillable="true" type="q2:AccountDomain" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetNameServers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetNameServersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q3="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="GetNameServersResult" nillable="true" type="q3:DNSNameServers" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeNameServers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q4="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="1" name="nameservers" type="q4:ArrayOfstring" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeNameServersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q5="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="ChangeNameServersResult" nillable="true" type="q5:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteNameServers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteNameServersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q6="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="DeleteNameServersResult" nillable="true" type="q6:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeLocking">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element minOccurs="1" name="locked" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeLockingResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q7="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="ChangeLockingResult" nillable="true" type="q7:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangePrivacyProtection">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element minOccurs="1" name="privacy" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangePrivacyProtectionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q8="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="ChangePrivacyProtectionResult" nillable="true" type="q8:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeAutoRenew">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element minOccurs="1" name="autoRenew" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeAutoRenewResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q9="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="ChangeAutoRenewResult" nillable="true" type="q9:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeContacts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q10="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="contacts" type="q10:Contacts" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeContactsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q11="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="ChangeContactsResult" nillable="true" type="q11:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainContacts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainContactsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q12="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="GetDomainContactsResult" nillable="true" type="q12:Contacts" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetHostRecords">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetHostRecordsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q13="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="GetHostRecordsResult" nillable="true" type="q13:HostRecords" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSARecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q14="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="aRecord" type="q14:ARecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSARecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q15="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="CreateDNSARecordResult" nillable="true" type="q15:ARecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSCNAMERecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q16="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="cnameRecord" type="q16:CNAMERecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSCNAMERecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q17="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="CreateDNSCNAMERecordResult" nillable="true" type="q17:CNAMERecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSMXRecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q18="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="mxRecord" type="q18:MXRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSMXRecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q19="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="CreateDNSMXRecordResult" nillable="true" type="q19:MXRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSAAAARecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q20="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="aaaaRecord" type="q20:AAAARecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSAAAARecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q21="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="CreateDNSAAAARecordResult" nillable="true" type="q21:AAAARecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSTXTRecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q22="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="txtRecord" type="q22:TXTRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSTXTRecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q23="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="CreateDNSTXTRecordResult" nillable="true" type="q23:TXTRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSSRVRecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q24="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="srvRecord" type="q24:SRVRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSSRVRecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q25="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="CreateDNSSRVRecordResult" nillable="true" type="q25:SRVRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSSPFRecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q26="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="spfRecord" type="q26:SPFRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDNSSPFRecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q27="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="0" name="CreateDNSSPFRecordResult" nillable="true" type="q27:SPFRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSARecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q28="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="aRecord" type="q28:ARecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSARecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q29="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="DeleteDNSARecordResult" nillable="true" type="q29:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSCNAMERecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q30="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="cnameRecord" type="q30:CNAMERecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSCNAMERecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q31="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="DeleteDNSCNAMERecordResult" nillable="true" type="q31:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSMXRecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q32="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="mxRecord" type="q32:MXRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSMXRecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q33="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="DeleteDNSMXRecordResult" nillable="true" type="q33:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSAAAARecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q34="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="aaaaRecord" type="q34:AAAARecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSAAAARecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q35="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="DeleteDNSAAAARecordResult" nillable="true" type="q35:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSTXTRecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q36="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="txtRecord" type="q36:TXTRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSTXTRecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q37="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="DeleteDNSTXTRecordResult" nillable="true" type="q37:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSSRVRecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q38="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="srvRecord" type="q38:SRVRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSSRVRecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q39="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="DeleteDNSSRVRecordResult" nillable="true" type="q39:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSSPFRecord">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element xmlns:q40="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" minOccurs="1" name="spfRecord" type="q40:SPFRecord" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSSPFRecordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q41="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="DeleteDNSSPFRecordResult" nillable="true" type="q41:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSRecordById">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="domainName" type="xs:string" />
            <xs:element minOccurs="1" name="recordId" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDNSRecordByIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q42="http://schemas.datacontract.org/2004/07/DomainServicesLib" minOccurs="0" name="DeleteDNSRecordByIdResult" nillable="true" type="q42:DomainApiSuccess" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="anyType" nillable="true" type="xs:anyType" />
      <xs:element name="anyURI" nillable="true" type="xs:anyURI" />
      <xs:element name="base64Binary" nillable="true" type="xs:base64Binary" />
      <xs:element name="boolean" nillable="true" type="xs:boolean" />
      <xs:element name="byte" nillable="true" type="xs:byte" />
      <xs:element name="dateTime" nillable="true" type="xs:dateTime" />
      <xs:element name="decimal" nillable="true" type="xs:decimal" />
      <xs:element name="double" nillable="true" type="xs:double" />
      <xs:element name="float" nillable="true" type="xs:float" />
      <xs:element name="int" nillable="true" type="xs:int" />
      <xs:element name="long" nillable="true" type="xs:long" />
      <xs:element name="QName" nillable="true" type="xs:QName" />
      <xs:element name="short" nillable="true" type="xs:short" />
      <xs:element name="string" nillable="true" type="xs:string" />
      <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte" />
      <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt" />
      <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong" />
      <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort" />
      <xs:element name="char" nillable="true" type="tns:char" />
      <xs:simpleType name="char">
        <xs:restriction base="xs:int" />
      </xs:simpleType>
      <xs:element name="duration" nillable="true" type="tns:duration" />
      <xs:simpleType name="duration">
        <xs:restriction base="xs:duration">
          <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?" />
          <xs:minInclusive value="-P10675199DT2H48M5.4775808S" />
          <xs:maxInclusive value="P10675199DT2H48M5.4775807S" />
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="guid" nillable="true" type="tns:guid" />
      <xs:simpleType name="guid">
        <xs:restriction base="xs:string">
          <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}" />
        </xs:restriction>
      </xs:simpleType>
      <xs:attribute name="FactoryType" type="xs:QName" />
      <xs:attribute name="Id" type="xs:ID" />
      <xs:attribute name="Ref" type="xs:IDREF" />
    </xs:schema>
    <xs:schema xmlns:tns="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
      <xs:complexType name="AccountSearchResult">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            A results object which contains properties for paging lists of domains.
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CurrentPage" type="xs:int">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The current page of the result set
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Domains" nillable="true" type="tns:ArrayOfAccountDomain">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The domains in the current page of the result set.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ResultsTotal" type="xs:int">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The number matched domains in the entire result set.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="AccountSearchResult" nillable="true" type="tns:AccountSearchResult" />
      <xs:complexType name="ArrayOfAccountDomain">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AccountDomain" nillable="true" type="tns:AccountDomain" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfAccountDomain" nillable="true" type="tns:ArrayOfAccountDomain" />
      <xs:complexType name="AccountDomain">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            DataContract representing a domain tied to an account.
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="AutoRenew" type="xs:boolean">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The auto renew status on the domain: "true" or "false"
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Category" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The NameBright category which contains the domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DomainName" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The name of the domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ExpirationDate" type="xs:dateTime">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The expiration date of the domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Locked" type="xs:boolean">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The status of the locked flag on the domain: "true" or "false"
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Status" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The status of the domain: "Active" or "Expired".
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="UpgradedDomain" type="xs:boolean">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A flag which indicates whether this domain has been upgraded or not.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="WhoIsPrivacy" type="xs:boolean">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The whois privacy status on the domain: "true" or "false"
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="AccountDomain" nillable="true" type="tns:AccountDomain" />
      <xs:complexType name="DNSNameServers">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            An object which contains name servers assigned to a domain.
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="DomainName" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The name of the domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" name="NameServers" nillable="true" type="q1:ArrayOfstring">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A collection of name servers assigned to this domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DNSNameServers" nillable="true" type="tns:DNSNameServers" />
      <xs:complexType name="Contacts">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            The contacts assigned to a domain.
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="AdministrativeContact" nillable="true" type="tns:Contact">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The administrative contact.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DomainName" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The name of the domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RegistrantContact" nillable="true" type="tns:Contact">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The registrant contact.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TechnicalContact" nillable="true" type="tns:Contact">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The technical contact.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Contacts" nillable="true" type="tns:Contacts" />
      <xs:complexType name="Contact">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            A contact
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Address1" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The first address line. 
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Address2" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The second address line.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="City" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The name of the city associated with the contact's address.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Country" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The country code associated with the contact's address as defined by ISO 3166. See: http://www.iso.org/iso/country_codes.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Department" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A department within the contact's organization, or null.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Email" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The contact's email address.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Fax" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A fax number for the contact.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="FirstName" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The contact's first or given name.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="LastName" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The contact's last name or surname.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Organization" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The organization that this contact is affiliated with, or null.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Phone" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The contact's phone number.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PostalCode" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The postal code associated with the contact's address.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Region" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The region or state associated with the contact's address.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Contact" nillable="true" type="tns:Contact" />
      <xs:complexType name="HostRecords">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            A response object which contains host records for a specific domain.
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AAAARecords" nillable="true" type="tns:ArrayOfAAAARecord">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A collection of AAAA Records for a specific domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ARecords" nillable="true" type="tns:ArrayOfARecord">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A collection of A Records for a specific domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CNAMERecords" nillable="true" type="tns:ArrayOfCNAMERecord">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A collection of CNAME Records for a specific domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DomainName" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The name of the domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MXRecords" nillable="true" type="tns:ArrayOfMXRecord">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A collection of MX Records for a specific domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SPFRecords" nillable="true" type="tns:ArrayOfSPFRecord">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A collection of SPF Records for a specific domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SRVRecords" nillable="true" type="tns:ArrayOfSRVRecord">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A collection of SRV Records for a specific domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TXTRecords" nillable="true" type="tns:ArrayOfTXTRecord">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A collection of TXT Records for a specific domain.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="HostRecords" nillable="true" type="tns:HostRecords" />
      <xs:complexType name="ArrayOfAAAARecord">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AAAARecord" nillable="true" type="tns:AAAARecord" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfAAAARecord" nillable="true" type="tns:ArrayOfAAAARecord" />
      <xs:complexType name="AAAARecord">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            A DNS AAAA Record. See: http://en.wikipedia.org/wiki/List_of_DNS_record_types#AAAA
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DNSRecord">
            <xs:sequence>
              <xs:element name="IPV6Address" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            The IPv6 address associated with the subdomain field.
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Subdomain" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            A subdomain for this DNS record. Given the domain name "example.com":
            </summary>
                    <example>
            A value of "www" matches "www.example.com", "test" matches "test.example.com".
            </example>
                    <example>
            A value of "@" matches only the second-level domain e.g. "example.com".
            </example>
                    <example>
            A wildcard value of "*" will match "everything.example.com", "example.com", or "www.example.com"
            </example>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="AAAARecord" nillable="true" type="tns:AAAARecord" />
      <xs:complexType name="DNSRecord">
        <xs:sequence>
          <xs:element name="RecordId" type="xs:int">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            A unique id associated with this DNS record.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DNSRecord" nillable="true" type="tns:DNSRecord" />
      <xs:complexType name="ArrayOfARecord">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ARecord" nillable="true" type="tns:ARecord" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfARecord" nillable="true" type="tns:ArrayOfARecord" />
      <xs:complexType name="ARecord">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            A DNS A Record. See: http://en.wikipedia.org/wiki/List_of_DNS_record_types#A
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DNSRecord">
            <xs:sequence>
              <xs:element name="IPV4Address" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            The IPv4 address associated with the subdomain field.
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Subdomain" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            A subdomain for this DNS record. Given the domain name "example.com":
            </summary>
                    <example>
            A value of "www" matches "www.example.com", "test" matches "test.example.com".
            </example>
                    <example>
            A value of "@" matches only the second-level domain e.g. "example.com".
            </example>
                    <example>
            A wildcard value of "*" will match "everything.example.com", "example.com", or "www.example.com"
            </example>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ARecord" nillable="true" type="tns:ARecord" />
      <xs:complexType name="ArrayOfCNAMERecord">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="CNAMERecord" nillable="true" type="tns:CNAMERecord" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfCNAMERecord" nillable="true" type="tns:ArrayOfCNAMERecord" />
      <xs:complexType name="CNAMERecord">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            A DNS CNAME record. See: http://en.wikipedia.org/wiki/CNAME_record
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DNSRecord">
            <xs:sequence>
              <xs:element name="RedirectDomain" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            The redirect domain: a full domain name like "www.example.com".
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Subdomain" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            A subdomain for this DNS record. Given the domain name "example.com":
            </summary>
                    <example>
            A value of "www" matches "www.example.com", "test" matches "test.example.com".
            </example>
                    <example>
            A value of "@" matches only the second-level domain e.g. "example.com".
            </example>
                    <example>
            A wildcard value of "*" will match "everything.example.com", "example.com", or "www.example.com"
            </example>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CNAMERecord" nillable="true" type="tns:CNAMERecord" />
      <xs:complexType name="ArrayOfMXRecord">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="MXRecord" nillable="true" type="tns:MXRecord" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfMXRecord" nillable="true" type="tns:ArrayOfMXRecord" />
      <xs:complexType name="MXRecord">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            A DNS MX Record. See: http://en.wikipedia.org/wiki/MX_record
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DNSRecord">
            <xs:sequence>
              <xs:element name="MailServer" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            The mail server name for the MX record. E.g. "mail.example.com".
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Priority" type="xs:int">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            A number represtenting the priority order of the mail server in this MX record. Servers with lower priority numbers will be preferred by email clients.
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Subdomain" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            A subdomain for this DNS record. Given the domain name "example.com":
            </summary>
                    <example>
            A value of "www" matches "www.example.com", "test" matches "test.example.com".
            </example>
                    <example>
            A value of "@" matches only the second-level domain e.g. "example.com".
            </example>
                    <example>
            A wildcard value of "*" will match "everything.example.com", "example.com", or "www.example.com"
            </example>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="MXRecord" nillable="true" type="tns:MXRecord" />
      <xs:complexType name="ArrayOfSPFRecord">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SPFRecord" nillable="true" type="tns:SPFRecord" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfSPFRecord" nillable="true" type="tns:ArrayOfSPFRecord" />
      <xs:complexType name="SPFRecord">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            A DNS SPF Record. See http://www.openspf.org/ and http://en.wikipedia.org/wiki/Sender_Policy_Framework
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DNSRecord">
            <xs:sequence>
              <xs:element name="SPFRecordValue" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            The SPF record value. See: http://www.openspf.org/SPF_Record_Syntax
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Subdomain" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            A subdomain for this DNS record. Given the domain name "example.com":
            </summary>
                    <example>
            A value of "www" matches "www.example.com", "test" matches "test.example.com".
            </example>
                    <example>
            A value of "@" matches only the second-level domain e.g. "example.com".
            </example>
                    <example>
            A wildcard value of "*" will match "everything.example.com", "example.com", or "www.example.com"
            </example>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="SPFRecord" nillable="true" type="tns:SPFRecord" />
      <xs:complexType name="ArrayOfSRVRecord">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SRVRecord" nillable="true" type="tns:SRVRecord" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfSRVRecord" nillable="true" type="tns:ArrayOfSRVRecord" />
      <xs:complexType name="SRVRecord">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            An DNS SRV Record. See: http://en.wikipedia.org/wiki/SRV_record. 
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DNSRecord">
            <xs:sequence>
              <xs:element name="Port" type="xs:int">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            The TCP or UDP port on which to the service is to be found.
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Priority" type="xs:int">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            The priority of the target host. Lower value means more preferred.
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Protocol" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            The transport protocol of the desired service.
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Service" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            A symbolic name for the service.
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Target" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            The canonical hostname of the machine providing the service.
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Weight" type="xs:int">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            A relative weight for records with the same priority.
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="SRVRecord" nillable="true" type="tns:SRVRecord" />
      <xs:complexType name="ArrayOfTXTRecord">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TXTRecord" nillable="true" type="tns:TXTRecord" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfTXTRecord" nillable="true" type="tns:ArrayOfTXTRecord" />
      <xs:complexType name="TXTRecord">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            A DNS TXT Record. See: http://en.wikipedia.org/wiki/List_of_DNS_record_types#TXT.
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DNSRecord">
            <xs:sequence>
              <xs:element name="Subdomain" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            A subdomain for this DNS record. Given the domain name "example.com":
            </summary>
                    <example>
            A value of "www" matches "www.example.com", "test" matches "test.example.com".
            </example>
                    <example>
            A value of "@" matches only the second-level domain e.g. "example.com".
            </example>
                    <example>
            A wildcard value of "*" will match "everything.example.com", "example.com", or "www.example.com"
            </example>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TextRecord" nillable="true" type="xs:string">
                <xs:annotation>
                  <xs:appinfo />
                  <xs:documentation>
                    <summary>
            Text which provides additional custom information about a domain name. 
            </summary>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="TXTRecord" nillable="true" type="tns:TXTRecord" />
    </xs:schema>
    <xs:schema xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/Arrays" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="ArrayOfstring">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfstring" nillable="true" type="tns:ArrayOfstring" />
    </xs:schema>
    <xs:schema xmlns:tns="http://schemas.datacontract.org/2004/07/DomainServicesLib" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/DomainServicesLib" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="DomainApiSuccess">
        <xs:annotation>
          <xs:appinfo />
          <xs:documentation>
            <summary>
            A generic result object returned when a simple operation succeeds.
            </summary>
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Operation" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            The name of the operation 
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SuccessMessage" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo />
              <xs:documentation>
                <summary>
            Additional information returned upon success.
            </summary>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DomainApiSuccess" nillable="true" type="tns:DomainApiSuccess" />
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="IDomainManagement_GetAccountDomains_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAccountDomains" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_GetAccountDomains_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAccountDomainsResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_GetAccountDomain_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAccountDomain" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_GetAccountDomain_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAccountDomainResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_GetNameServers_InputMessage">
    <wsdl:part name="parameters" element="tns:GetNameServers" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_GetNameServers_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetNameServersResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_ChangeNameServers_InputMessage">
    <wsdl:part name="parameters" element="tns:ChangeNameServers" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_ChangeNameServers_OutputMessage">
    <wsdl:part name="parameters" element="tns:ChangeNameServersResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteNameServers_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteNameServers" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteNameServers_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteNameServersResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_ChangeLocking_InputMessage">
    <wsdl:part name="parameters" element="tns:ChangeLocking" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_ChangeLocking_OutputMessage">
    <wsdl:part name="parameters" element="tns:ChangeLockingResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_ChangePrivacyProtection_InputMessage">
    <wsdl:part name="parameters" element="tns:ChangePrivacyProtection" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_ChangePrivacyProtection_OutputMessage">
    <wsdl:part name="parameters" element="tns:ChangePrivacyProtectionResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_ChangeAutoRenew_InputMessage">
    <wsdl:part name="parameters" element="tns:ChangeAutoRenew" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_ChangeAutoRenew_OutputMessage">
    <wsdl:part name="parameters" element="tns:ChangeAutoRenewResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_ChangeContacts_InputMessage">
    <wsdl:part name="parameters" element="tns:ChangeContacts" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_ChangeContacts_OutputMessage">
    <wsdl:part name="parameters" element="tns:ChangeContactsResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_GetDomainContacts_InputMessage">
    <wsdl:part name="parameters" element="tns:GetDomainContacts" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_GetDomainContacts_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetDomainContactsResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_GetHostRecords_InputMessage">
    <wsdl:part name="parameters" element="tns:GetHostRecords" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_GetHostRecords_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetHostRecordsResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSARecord_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSARecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSARecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSARecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSCNAMERecord_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSCNAMERecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSCNAMERecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSCNAMERecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSMXRecord_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSMXRecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSMXRecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSMXRecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSAAAARecord_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSAAAARecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSAAAARecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSAAAARecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSTXTRecord_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSTXTRecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSTXTRecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSTXTRecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSSRVRecord_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSSRVRecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSSRVRecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSSRVRecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSSPFRecord_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSSPFRecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_CreateDNSSPFRecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateDNSSPFRecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSARecord_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSARecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSARecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSARecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSCNAMERecord_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSCNAMERecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSCNAMERecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSCNAMERecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSMXRecord_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSMXRecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSMXRecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSMXRecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSAAAARecord_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSAAAARecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSAAAARecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSAAAARecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSTXTRecord_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSTXTRecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSTXTRecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSTXTRecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSSRVRecord_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSSRVRecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSSRVRecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSSRVRecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSSPFRecord_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSSPFRecord" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSSPFRecord_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSSPFRecordResponse" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSRecordById_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSRecordById" />
  </wsdl:message>
  <wsdl:message name="IDomainManagement_DeleteDNSRecordById_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDNSRecordByIdResponse" />
  </wsdl:message>
  <wsdl:portType name="IDomainManagement">
    <wsdl:documentation>
      <summary>
            RPC endpoint for domain management operations.
            </summary>
    </wsdl:documentation>
    <wsdl:operation name="GetAccountDomains">
      <wsdl:documentation>
        <summary>
            Get a list of domains in the account accessible to the API application.
            </summary>
        <param name="domainsPerPage">The number of domains per result page that you would like to retrieve. The maximum is 100.</param>
        <param name="page">The page number within the result set.</param>
        <returns>
            A list of domains in the account 
            </returns>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/GetAccountDomains" message="tns:IDomainManagement_GetAccountDomains_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/GetAccountDomainsResponse" message="tns:IDomainManagement_GetAccountDomains_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetAccountDomain">
      <wsdl:documentation>
        <summary>
            Gets a domain within the account.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <returns>A domain from the acccount</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/GetAccountDomain" message="tns:IDomainManagement_GetAccountDomain_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/GetAccountDomainResponse" message="tns:IDomainManagement_GetAccountDomain_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetNameServers">
      <wsdl:documentation>
        <summary>
            Returns the name servers assigned to a domain in your account.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <returns>A list of name servers set on this domain.</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/GetNameServers" message="tns:IDomainManagement_GetNameServers_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/GetNameServersResponse" message="tns:IDomainManagement_GetNameServers_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="ChangeNameServers">
      <wsdl:documentation>
        <summary>
            Change the nameservers assigned to a domain.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="nameservers">A list of nameservers. You are only allowed to set 4.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">
            No nameservers specified.
            or
            You are only allowed to set 4 nameservers.
            </exception>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/ChangeNameServers" message="tns:IDomainManagement_ChangeNameServers_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/ChangeNameServersResponse" message="tns:IDomainManagement_ChangeNameServers_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DeleteNameServers">
      <wsdl:documentation>
        <summary>
            Delete all nameservers assigned with a domain.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteNameServers" message="tns:IDomainManagement_DeleteNameServers_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteNameServersResponse" message="tns:IDomainManagement_DeleteNameServers_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="ChangeLocking">
      <wsdl:documentation>
        <summary>
            Changes the lock status of the domain.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="locked">if set to <c>true</c> will lock the domain.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/ChangeLocking" message="tns:IDomainManagement_ChangeLocking_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/ChangeLockingResponse" message="tns:IDomainManagement_ChangeLocking_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="ChangePrivacyProtection">
      <wsdl:documentation>
        <summary>
            Changes the whois privacy protection setting on the domain.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="privacy">if set to <c>true</c> will enable whois privacy protection for the domain.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/ChangePrivacyProtection" message="tns:IDomainManagement_ChangePrivacyProtection_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/ChangePrivacyProtectionResponse" message="tns:IDomainManagement_ChangePrivacyProtection_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="ChangeAutoRenew">
      <wsdl:documentation>
        <summary>
            Changes the auto renew setting on the domain.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="autoRenew">if set to <c>true</c> will enable auto renewal for the domain.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/ChangeAutoRenew" message="tns:IDomainManagement_ChangeAutoRenew_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/ChangeAutoRenewResponse" message="tns:IDomainManagement_ChangeAutoRenew_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="ChangeContacts">
      <wsdl:documentation>
        <summary>
            Changes the contacts for a domain.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="contacts">The contacts.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
        <exception cref="T:System.ServiceModel.FaultException">DomainContacts failed validation.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/ChangeContacts" message="tns:IDomainManagement_ChangeContacts_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/ChangeContactsResponse" message="tns:IDomainManagement_ChangeContacts_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetDomainContacts">
      <wsdl:documentation>
        <summary>
            Gets the domain contacts.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <returns>The contacts which are currently set on the domain.</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/GetDomainContacts" message="tns:IDomainManagement_GetDomainContacts_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/GetDomainContactsResponse" message="tns:IDomainManagement_GetDomainContacts_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetHostRecords">
      <wsdl:documentation>
        <summary>
            Gets host records set for the given domain.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <returns>A DomainHostRecords response object.</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/GetHostRecords" message="tns:IDomainManagement_GetHostRecords_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/GetHostRecordsResponse" message="tns:IDomainManagement_GetHostRecords_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="CreateDNSARecord">
      <wsdl:documentation>
        <summary>
            Creates a DNS A record for the given domain with a TTL of 7200 seconds (2 hours).
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="aRecord">A DNS A record.</param>
        <returns>The record created by the operation.</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSARecord" message="tns:IDomainManagement_CreateDNSARecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSARecordResponse" message="tns:IDomainManagement_CreateDNSARecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="CreateDNSCNAMERecord">
      <wsdl:documentation>
        <summary>
            Creates a DNS CNAME record for the given domain with a TTL of 7200 seconds (2 hours).
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="cnameRecord">A DNS CNAME record.</param>
        <returns>The record created by the operation.</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSCNAMERecord" message="tns:IDomainManagement_CreateDNSCNAMERecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSCNAMERecordResponse" message="tns:IDomainManagement_CreateDNSCNAMERecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="CreateDNSMXRecord">
      <wsdl:documentation>
        <summary>
            Creates a DNS MX record for the given domain with a TTL of 7200 seconds (2 hours).
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="mxRecord">A DNS MX record.</param>
        <returns>The record created by the operation.</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSMXRecord" message="tns:IDomainManagement_CreateDNSMXRecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSMXRecordResponse" message="tns:IDomainManagement_CreateDNSMXRecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="CreateDNSAAAARecord">
      <wsdl:documentation>
        <summary>
            Creates a DNS AAAA record for the given domain with a TTL of 7200 seconds (2 hours).
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="aaaaRecord">A DNS AAAA record.</param>
        <returns>The record created by the operation.</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSAAAARecord" message="tns:IDomainManagement_CreateDNSAAAARecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSAAAARecordResponse" message="tns:IDomainManagement_CreateDNSAAAARecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="CreateDNSTXTRecord">
      <wsdl:documentation>
        <summary>
            Creates a DNS TXT record for the given domain with a TTL of 7200 seconds (2 hours).
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="txtRecord">A DNS TXT record.</param>
        <returns>The record created by the operation.</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSTXTRecord" message="tns:IDomainManagement_CreateDNSTXTRecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSTXTRecordResponse" message="tns:IDomainManagement_CreateDNSTXTRecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="CreateDNSSRVRecord">
      <wsdl:documentation>
        <summary>
            Creates a DNS SRV record for the given domain with a TTL of 7200 seconds (2 hours).
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="srvRecord">A DNS SRV record.</param>
        <returns>The record created by the operation.</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSSRVRecord" message="tns:IDomainManagement_CreateDNSSRVRecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSSRVRecordResponse" message="tns:IDomainManagement_CreateDNSSRVRecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="CreateDNSSPFRecord">
      <wsdl:documentation>
        <summary>
            Creates a DNS SPF record for the given domain with a TTL of 7200 seconds (2 hours).
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="spfRecord">A DNS SPF record.</param>
        <returns>The record created by the operation.</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSSPFRecord" message="tns:IDomainManagement_CreateDNSSPFRecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/CreateDNSSPFRecordResponse" message="tns:IDomainManagement_CreateDNSSPFRecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSARecord">
      <wsdl:documentation>
        <summary>
            Deletes the specified DNS A record.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="aRecord">A DNS A record.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSARecord" message="tns:IDomainManagement_DeleteDNSARecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSARecordResponse" message="tns:IDomainManagement_DeleteDNSARecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSCNAMERecord">
      <wsdl:documentation>
        <summary>
            Deletes the specified DNS CNAME record.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="cnameRecord">A DNS CNAME record.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSCNAMERecord" message="tns:IDomainManagement_DeleteDNSCNAMERecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSCNAMERecordResponse" message="tns:IDomainManagement_DeleteDNSCNAMERecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSMXRecord">
      <wsdl:documentation>
        <summary>
            Deletes the specified DNS MX record.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="mxRecord">A DNS MX record.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSMXRecord" message="tns:IDomainManagement_DeleteDNSMXRecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSMXRecordResponse" message="tns:IDomainManagement_DeleteDNSMXRecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSAAAARecord">
      <wsdl:documentation>
        <summary>
            Deletes the specified DNS AAAA record.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="aaaaRecord">A DNS AAAA record.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSAAAARecord" message="tns:IDomainManagement_DeleteDNSAAAARecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSAAAARecordResponse" message="tns:IDomainManagement_DeleteDNSAAAARecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSTXTRecord">
      <wsdl:documentation>
        <summary>
            Deletes the specified DNS TXT record.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="txtRecord">A DNS TXT record.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSTXTRecord" message="tns:IDomainManagement_DeleteDNSTXTRecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSTXTRecordResponse" message="tns:IDomainManagement_DeleteDNSTXTRecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSSRVRecord">
      <wsdl:documentation>
        <summary>
            Deletes the specified DNS SRV record.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="srvRecord">A DNS SRV record.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSSRVRecord" message="tns:IDomainManagement_DeleteDNSSRVRecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSSRVRecordResponse" message="tns:IDomainManagement_DeleteDNSSRVRecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSSPFRecord">
      <wsdl:documentation>
        <summary>
            Deletes the specified DNS SPF record.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="spfRecord">A DNS SPF record.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSSPFRecord" message="tns:IDomainManagement_DeleteDNSSPFRecord_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSSPFRecordResponse" message="tns:IDomainManagement_DeleteDNSSPFRecord_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSRecordById">
      <wsdl:documentation>
        <summary>
            Deletes the specified DNS record using its record id.
            </summary>
        <param name="domainName">A domain name in the form of &amp;lt;name&amp;gt;.&amp;lt;tld&amp;gt;</param>
        <param name="recordId">The record id.</param>
        <returns>A success message corresponding to the operation</returns>
        <exception cref="T:System.ServiceModel.FaultException">Could not find domain within account.</exception>
      </wsdl:documentation>
      <wsdl:input wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSRecordById" message="tns:IDomainManagement_DeleteDNSRecordById_InputMessage" />
      <wsdl:output wsaw:Action="https://api.namebright.com/IDomainManagement/DeleteDNSRecordByIdResponse" message="tns:IDomainManagement_DeleteDNSRecordById_OutputMessage" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpsBinding_IDomainManagement" type="tns:IDomainManagement">
    <wsp:PolicyReference URI="#BasicHttpsBinding_IDomainManagement_policy" />
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetAccountDomains">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/GetAccountDomains" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccountDomain">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/GetAccountDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNameServers">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/GetNameServers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ChangeNameServers">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/ChangeNameServers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteNameServers">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/DeleteNameServers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ChangeLocking">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/ChangeLocking" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ChangePrivacyProtection">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/ChangePrivacyProtection" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ChangeAutoRenew">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/ChangeAutoRenew" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ChangeContacts">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/ChangeContacts" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDomainContacts">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/GetDomainContacts" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetHostRecords">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/GetHostRecords" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDNSARecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/CreateDNSARecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDNSCNAMERecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/CreateDNSCNAMERecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDNSMXRecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/CreateDNSMXRecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDNSAAAARecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/CreateDNSAAAARecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDNSTXTRecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/CreateDNSTXTRecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDNSSRVRecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/CreateDNSSRVRecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDNSSPFRecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/CreateDNSSPFRecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSARecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/DeleteDNSARecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSCNAMERecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/DeleteDNSCNAMERecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSMXRecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/DeleteDNSMXRecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSAAAARecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/DeleteDNSAAAARecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSTXTRecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/DeleteDNSTXTRecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSSRVRecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/DeleteDNSSRVRecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSSPFRecord">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/DeleteDNSSPFRecord" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteDNSRecordById">
      <soap:operation soapAction="https://api.namebright.com/IDomainManagement/DeleteDNSRecordById" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DomainManagement">
    <wsdl:port name="BasicHttpsBinding_IDomainManagement" binding="tns:BasicHttpsBinding_IDomainManagement">
      <soap:address location="https://api.namebright.com/soap/DomainManagement.svc" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>