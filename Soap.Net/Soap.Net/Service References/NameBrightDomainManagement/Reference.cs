//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NameBright.DomainApi.Soap.NameBrightDomainManagement {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSearchResult", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class AccountSearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NameBright.DomainApi.Soap.NameBrightDomainManagement.AccountDomain[] DomainsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultsTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPage {
            get {
                return this.CurrentPageField;
            }
            set {
                if ((this.CurrentPageField.Equals(value) != true)) {
                    this.CurrentPageField = value;
                    this.RaisePropertyChanged("CurrentPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.AccountDomain[] Domains {
            get {
                return this.DomainsField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainsField, value) != true)) {
                    this.DomainsField = value;
                    this.RaisePropertyChanged("Domains");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultsTotal {
            get {
                return this.ResultsTotalField;
            }
            set {
                if ((this.ResultsTotalField.Equals(value) != true)) {
                    this.ResultsTotalField = value;
                    this.RaisePropertyChanged("ResultsTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDomain", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class AccountDomain : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool AutoRenewField;
        
        private string CategoryField;
        
        private string DomainNameField;
        
        private System.DateTime ExpirationDateField;
        
        private bool LockedField;
        
        private string StatusField;
        
        private bool UpgradedDomainField;
        
        private bool WhoIsPrivacyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool AutoRenew {
            get {
                return this.AutoRenewField;
            }
            set {
                if ((this.AutoRenewField.Equals(value) != true)) {
                    this.AutoRenewField = value;
                    this.RaisePropertyChanged("AutoRenew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DomainName {
            get {
                return this.DomainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainNameField, value) != true)) {
                    this.DomainNameField = value;
                    this.RaisePropertyChanged("DomainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool UpgradedDomain {
            get {
                return this.UpgradedDomainField;
            }
            set {
                if ((this.UpgradedDomainField.Equals(value) != true)) {
                    this.UpgradedDomainField = value;
                    this.RaisePropertyChanged("UpgradedDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool WhoIsPrivacy {
            get {
                return this.WhoIsPrivacyField;
            }
            set {
                if ((this.WhoIsPrivacyField.Equals(value) != true)) {
                    this.WhoIsPrivacyField = value;
                    this.RaisePropertyChanged("WhoIsPrivacy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DNSNameServers", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class DNSNameServers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DomainNameField;
        
        private string[] NameServersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DomainName {
            get {
                return this.DomainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainNameField, value) != true)) {
                    this.DomainNameField = value;
                    this.RaisePropertyChanged("DomainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] NameServers {
            get {
                return this.NameServersField;
            }
            set {
                if ((object.ReferenceEquals(this.NameServersField, value) != true)) {
                    this.NameServersField = value;
                    this.RaisePropertyChanged("NameServers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainApiSuccess", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib")]
    [System.SerializableAttribute()]
    public partial class DomainApiSuccess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationField, value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessMessage {
            get {
                return this.SuccessMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessMessageField, value) != true)) {
                    this.SuccessMessageField = value;
                    this.RaisePropertyChanged("SuccessMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contacts", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class Contacts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private NameBright.DomainApi.Soap.NameBrightDomainManagement.Contact AdministrativeContactField;
        
        private string DomainNameField;
        
        private NameBright.DomainApi.Soap.NameBrightDomainManagement.Contact RegistrantContactField;
        
        private NameBright.DomainApi.Soap.NameBrightDomainManagement.Contact TechnicalContactField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.Contact AdministrativeContact {
            get {
                return this.AdministrativeContactField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativeContactField, value) != true)) {
                    this.AdministrativeContactField = value;
                    this.RaisePropertyChanged("AdministrativeContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DomainName {
            get {
                return this.DomainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainNameField, value) != true)) {
                    this.DomainNameField = value;
                    this.RaisePropertyChanged("DomainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.Contact RegistrantContact {
            get {
                return this.RegistrantContactField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrantContactField, value) != true)) {
                    this.RegistrantContactField = value;
                    this.RaisePropertyChanged("RegistrantContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.Contact TechnicalContact {
            get {
                return this.TechnicalContactField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnicalContactField, value) != true)) {
                    this.TechnicalContactField = value;
                    this.RaisePropertyChanged("TechnicalContact");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        private string CityField;
        
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationField;
        
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HostRecords", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class HostRecords : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NameBright.DomainApi.Soap.NameBrightDomainManagement.AAAARecord[] AAAARecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NameBright.DomainApi.Soap.NameBrightDomainManagement.ARecord[] ARecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NameBright.DomainApi.Soap.NameBrightDomainManagement.CNAMERecord[] CNAMERecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NameBright.DomainApi.Soap.NameBrightDomainManagement.MXRecord[] MXRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NameBright.DomainApi.Soap.NameBrightDomainManagement.SRVRecord[] SRVRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NameBright.DomainApi.Soap.NameBrightDomainManagement.TXTRecord[] TXTRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.AAAARecord[] AAAARecords {
            get {
                return this.AAAARecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.AAAARecordsField, value) != true)) {
                    this.AAAARecordsField = value;
                    this.RaisePropertyChanged("AAAARecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ARecord[] ARecords {
            get {
                return this.ARecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.ARecordsField, value) != true)) {
                    this.ARecordsField = value;
                    this.RaisePropertyChanged("ARecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CNAMERecord[] CNAMERecords {
            get {
                return this.CNAMERecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.CNAMERecordsField, value) != true)) {
                    this.CNAMERecordsField = value;
                    this.RaisePropertyChanged("CNAMERecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainName {
            get {
                return this.DomainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainNameField, value) != true)) {
                    this.DomainNameField = value;
                    this.RaisePropertyChanged("DomainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.MXRecord[] MXRecords {
            get {
                return this.MXRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.MXRecordsField, value) != true)) {
                    this.MXRecordsField = value;
                    this.RaisePropertyChanged("MXRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.SRVRecord[] SRVRecords {
            get {
                return this.SRVRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.SRVRecordsField, value) != true)) {
                    this.SRVRecordsField = value;
                    this.RaisePropertyChanged("SRVRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.TXTRecord[] TXTRecords {
            get {
                return this.TXTRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.TXTRecordsField, value) != true)) {
                    this.TXTRecordsField = value;
                    this.RaisePropertyChanged("TXTRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AAAARecord", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class AAAARecord : NameBright.DomainApi.Soap.NameBrightDomainManagement.DNSRecord {
        
        private string IPV6AddressField;
        
        private string SubdomainField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string IPV6Address {
            get {
                return this.IPV6AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPV6AddressField, value) != true)) {
                    this.IPV6AddressField = value;
                    this.RaisePropertyChanged("IPV6Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Subdomain {
            get {
                return this.SubdomainField;
            }
            set {
                if ((object.ReferenceEquals(this.SubdomainField, value) != true)) {
                    this.SubdomainField = value;
                    this.RaisePropertyChanged("Subdomain");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARecord", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class ARecord : NameBright.DomainApi.Soap.NameBrightDomainManagement.DNSRecord {
        
        private string IPV4AddressField;
        
        private string SubdomainField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string IPV4Address {
            get {
                return this.IPV4AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPV4AddressField, value) != true)) {
                    this.IPV4AddressField = value;
                    this.RaisePropertyChanged("IPV4Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Subdomain {
            get {
                return this.SubdomainField;
            }
            set {
                if ((object.ReferenceEquals(this.SubdomainField, value) != true)) {
                    this.SubdomainField = value;
                    this.RaisePropertyChanged("Subdomain");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CNAMERecord", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class CNAMERecord : NameBright.DomainApi.Soap.NameBrightDomainManagement.DNSRecord {
        
        private string RedirectDomainField;
        
        private string SubdomainField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string RedirectDomain {
            get {
                return this.RedirectDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.RedirectDomainField, value) != true)) {
                    this.RedirectDomainField = value;
                    this.RaisePropertyChanged("RedirectDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Subdomain {
            get {
                return this.SubdomainField;
            }
            set {
                if ((object.ReferenceEquals(this.SubdomainField, value) != true)) {
                    this.SubdomainField = value;
                    this.RaisePropertyChanged("Subdomain");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MXRecord", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class MXRecord : NameBright.DomainApi.Soap.NameBrightDomainManagement.DNSRecord {
        
        private string MailServerField;
        
        private int PriorityField;
        
        private string SubdomainField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string MailServer {
            get {
                return this.MailServerField;
            }
            set {
                if ((object.ReferenceEquals(this.MailServerField, value) != true)) {
                    this.MailServerField = value;
                    this.RaisePropertyChanged("MailServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Subdomain {
            get {
                return this.SubdomainField;
            }
            set {
                if ((object.ReferenceEquals(this.SubdomainField, value) != true)) {
                    this.SubdomainField = value;
                    this.RaisePropertyChanged("Subdomain");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SRVRecord", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class SRVRecord : NameBright.DomainApi.Soap.NameBrightDomainManagement.DNSRecord {
        
        private int PortField;
        
        private int PriorityField;
        
        private string ProtocolField;
        
        private string ServiceField;
        
        private string TargetField;
        
        private int WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Protocol {
            get {
                return this.ProtocolField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolField, value) != true)) {
                    this.ProtocolField = value;
                    this.RaisePropertyChanged("Protocol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Target {
            get {
                return this.TargetField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetField, value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TXTRecord", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    public partial class TXTRecord : NameBright.DomainApi.Soap.NameBrightDomainManagement.DNSRecord {
        
        private string SubdomainField;
        
        private string TextRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Subdomain {
            get {
                return this.SubdomainField;
            }
            set {
                if ((object.ReferenceEquals(this.SubdomainField, value) != true)) {
                    this.SubdomainField = value;
                    this.RaisePropertyChanged("Subdomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string TextRecord {
            get {
                return this.TextRecordField;
            }
            set {
                if ((object.ReferenceEquals(this.TextRecordField, value) != true)) {
                    this.TextRecordField = value;
                    this.RaisePropertyChanged("TextRecord");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DNSRecord", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Management")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NameBright.DomainApi.Soap.NameBrightDomainManagement.ARecord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NameBright.DomainApi.Soap.NameBrightDomainManagement.CNAMERecord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NameBright.DomainApi.Soap.NameBrightDomainManagement.MXRecord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NameBright.DomainApi.Soap.NameBrightDomainManagement.SRVRecord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NameBright.DomainApi.Soap.NameBrightDomainManagement.TXTRecord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NameBright.DomainApi.Soap.NameBrightDomainManagement.AAAARecord))]
    public partial class DNSRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int RecordIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://api.namebright.com", ConfigurationName="NameBrightDomainManagement.IDomainManagement")]
    public interface IDomainManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/GetAccountDomains", ReplyAction="https://api.namebright.com/IDomainManagement/GetAccountDomainsResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.AccountSearchResult GetAccountDomains(int domainsPerPage, int page);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/GetAccountDomains", ReplyAction="https://api.namebright.com/IDomainManagement/GetAccountDomainsResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.AccountSearchResult> GetAccountDomainsAsync(int domainsPerPage, int page);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/GetAccountDomain", ReplyAction="https://api.namebright.com/IDomainManagement/GetAccountDomainResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainResponse GetAccountDomain(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/GetAccountDomain", ReplyAction="https://api.namebright.com/IDomainManagement/GetAccountDomainResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainResponse> GetAccountDomainAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/GetNameServers", ReplyAction="https://api.namebright.com/IDomainManagement/GetNameServersResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersResponse GetNameServers(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/GetNameServers", ReplyAction="https://api.namebright.com/IDomainManagement/GetNameServersResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersResponse> GetNameServersAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/ChangeNameServers", ReplyAction="https://api.namebright.com/IDomainManagement/ChangeNameServersResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersResponse ChangeNameServers(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/ChangeNameServers", ReplyAction="https://api.namebright.com/IDomainManagement/ChangeNameServersResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersResponse> ChangeNameServersAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/DeleteNameServers", ReplyAction="https://api.namebright.com/IDomainManagement/DeleteNameServersResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersResponse DeleteNameServers(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/DeleteNameServers", ReplyAction="https://api.namebright.com/IDomainManagement/DeleteNameServersResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersResponse> DeleteNameServersAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/ChangeLocking", ReplyAction="https://api.namebright.com/IDomainManagement/ChangeLockingResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingResponse ChangeLocking(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/ChangeLocking", ReplyAction="https://api.namebright.com/IDomainManagement/ChangeLockingResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingResponse> ChangeLockingAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/ChangePrivacyProtection", ReplyAction="https://api.namebright.com/IDomainManagement/ChangePrivacyProtectionResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionResponse ChangePrivacyProtection(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/ChangePrivacyProtection", ReplyAction="https://api.namebright.com/IDomainManagement/ChangePrivacyProtectionResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionResponse> ChangePrivacyProtectionAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/ChangeAutoRenew", ReplyAction="https://api.namebright.com/IDomainManagement/ChangeAutoRenewResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewResponse ChangeAutoRenew(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/ChangeAutoRenew", ReplyAction="https://api.namebright.com/IDomainManagement/ChangeAutoRenewResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewResponse> ChangeAutoRenewAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/ChangeContacts", ReplyAction="https://api.namebright.com/IDomainManagement/ChangeContactsResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsResponse ChangeContacts(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/ChangeContacts", ReplyAction="https://api.namebright.com/IDomainManagement/ChangeContactsResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsResponse> ChangeContactsAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/GetDomainContacts", ReplyAction="https://api.namebright.com/IDomainManagement/GetDomainContactsResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsResponse GetDomainContacts(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/GetDomainContacts", ReplyAction="https://api.namebright.com/IDomainManagement/GetDomainContactsResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsResponse> GetDomainContactsAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/GetHostRecords", ReplyAction="https://api.namebright.com/IDomainManagement/GetHostRecordsResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsResponse GetHostRecords(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/GetHostRecords", ReplyAction="https://api.namebright.com/IDomainManagement/GetHostRecordsResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsResponse> GetHostRecordsAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSARecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSARecordResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordResponse CreateDNSARecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSARecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSARecordResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordResponse> CreateDNSARecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSCNAMERecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSCNAMERecordResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordResponse CreateDNSCNAMERecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSCNAMERecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSCNAMERecordResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordResponse> CreateDNSCNAMERecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSMXRecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSMXRecordResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordResponse CreateDNSMXRecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSMXRecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSMXRecordResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordResponse> CreateDNSMXRecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSAAAARecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSAAAARecordResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordResponse CreateDNSAAAARecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSAAAARecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSAAAARecordResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordResponse> CreateDNSAAAARecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSTXTRecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSTXTRecordResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordResponse CreateDNSTXTRecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSTXTRecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSTXTRecordResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordResponse> CreateDNSTXTRecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSSRVRecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSSRVRecordResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordResponse CreateDNSSRVRecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/CreateDNSSRVRecord", ReplyAction="https://api.namebright.com/IDomainManagement/CreateDNSSRVRecordResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordResponse> CreateDNSSRVRecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/DeleteDNSRecordById", ReplyAction="https://api.namebright.com/IDomainManagement/DeleteDNSRecordByIdResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdResponse DeleteDNSRecordById(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainManagement/DeleteDNSRecordById", ReplyAction="https://api.namebright.com/IDomainManagement/DeleteDNSRecordByIdResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdResponse> DeleteDNSRecordByIdAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAccountDomainRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAccountDomain", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequestBody Body;
        
        public GetAccountDomainRequest() {
        }
        
        public GetAccountDomainRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class GetAccountDomainRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        public GetAccountDomainRequestBody() {
        }
        
        public GetAccountDomainRequestBody(string domainName) {
            this.domainName = domainName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAccountDomainResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAccountDomainResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainResponseBody Body;
        
        public GetAccountDomainResponse() {
        }
        
        public GetAccountDomainResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class GetAccountDomainResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.AccountDomain GetAccountDomainResult;
        
        public GetAccountDomainResponseBody() {
        }
        
        public GetAccountDomainResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.AccountDomain GetAccountDomainResult) {
            this.GetAccountDomainResult = GetAccountDomainResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNameServersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNameServers", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequestBody Body;
        
        public GetNameServersRequest() {
        }
        
        public GetNameServersRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class GetNameServersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        public GetNameServersRequestBody() {
        }
        
        public GetNameServersRequestBody(string domainName) {
            this.domainName = domainName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNameServersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNameServersResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersResponseBody Body;
        
        public GetNameServersResponse() {
        }
        
        public GetNameServersResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class GetNameServersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DNSNameServers GetNameServersResult;
        
        public GetNameServersResponseBody() {
        }
        
        public GetNameServersResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.DNSNameServers GetNameServersResult) {
            this.GetNameServersResult = GetNameServersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeNameServersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeNameServers", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequestBody Body;
        
        public ChangeNameServersRequest() {
        }
        
        public ChangeNameServersRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class ChangeNameServersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string[] nameservers;
        
        public ChangeNameServersRequestBody() {
        }
        
        public ChangeNameServersRequestBody(string domainName, string[] nameservers) {
            this.domainName = domainName;
            this.nameservers = nameservers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeNameServersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeNameServersResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersResponseBody Body;
        
        public ChangeNameServersResponse() {
        }
        
        public ChangeNameServersResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class ChangeNameServersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeNameServersResult;
        
        public ChangeNameServersResponseBody() {
        }
        
        public ChangeNameServersResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeNameServersResult) {
            this.ChangeNameServersResult = ChangeNameServersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteNameServersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteNameServers", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequestBody Body;
        
        public DeleteNameServersRequest() {
        }
        
        public DeleteNameServersRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class DeleteNameServersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        public DeleteNameServersRequestBody() {
        }
        
        public DeleteNameServersRequestBody(string domainName) {
            this.domainName = domainName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteNameServersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteNameServersResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersResponseBody Body;
        
        public DeleteNameServersResponse() {
        }
        
        public DeleteNameServersResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class DeleteNameServersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess DeleteNameServersResult;
        
        public DeleteNameServersResponseBody() {
        }
        
        public DeleteNameServersResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess DeleteNameServersResult) {
            this.DeleteNameServersResult = DeleteNameServersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeLockingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeLocking", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequestBody Body;
        
        public ChangeLockingRequest() {
        }
        
        public ChangeLockingRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class ChangeLockingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool locked;
        
        public ChangeLockingRequestBody() {
        }
        
        public ChangeLockingRequestBody(string domainName, bool locked) {
            this.domainName = domainName;
            this.locked = locked;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeLockingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeLockingResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingResponseBody Body;
        
        public ChangeLockingResponse() {
        }
        
        public ChangeLockingResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class ChangeLockingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeLockingResult;
        
        public ChangeLockingResponseBody() {
        }
        
        public ChangeLockingResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeLockingResult) {
            this.ChangeLockingResult = ChangeLockingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePrivacyProtectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangePrivacyProtection", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequestBody Body;
        
        public ChangePrivacyProtectionRequest() {
        }
        
        public ChangePrivacyProtectionRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class ChangePrivacyProtectionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool privacy;
        
        public ChangePrivacyProtectionRequestBody() {
        }
        
        public ChangePrivacyProtectionRequestBody(string domainName, bool privacy) {
            this.domainName = domainName;
            this.privacy = privacy;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePrivacyProtectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangePrivacyProtectionResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionResponseBody Body;
        
        public ChangePrivacyProtectionResponse() {
        }
        
        public ChangePrivacyProtectionResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class ChangePrivacyProtectionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangePrivacyProtectionResult;
        
        public ChangePrivacyProtectionResponseBody() {
        }
        
        public ChangePrivacyProtectionResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangePrivacyProtectionResult) {
            this.ChangePrivacyProtectionResult = ChangePrivacyProtectionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeAutoRenewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeAutoRenew", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequestBody Body;
        
        public ChangeAutoRenewRequest() {
        }
        
        public ChangeAutoRenewRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class ChangeAutoRenewRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool autoRenew;
        
        public ChangeAutoRenewRequestBody() {
        }
        
        public ChangeAutoRenewRequestBody(string domainName, bool autoRenew) {
            this.domainName = domainName;
            this.autoRenew = autoRenew;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeAutoRenewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeAutoRenewResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewResponseBody Body;
        
        public ChangeAutoRenewResponse() {
        }
        
        public ChangeAutoRenewResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class ChangeAutoRenewResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeAutoRenewResult;
        
        public ChangeAutoRenewResponseBody() {
        }
        
        public ChangeAutoRenewResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeAutoRenewResult) {
            this.ChangeAutoRenewResult = ChangeAutoRenewResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeContactsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeContacts", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequestBody Body;
        
        public ChangeContactsRequest() {
        }
        
        public ChangeContactsRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class ChangeContactsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.Contacts contacts;
        
        public ChangeContactsRequestBody() {
        }
        
        public ChangeContactsRequestBody(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.Contacts contacts) {
            this.domainName = domainName;
            this.contacts = contacts;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeContactsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeContactsResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsResponseBody Body;
        
        public ChangeContactsResponse() {
        }
        
        public ChangeContactsResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class ChangeContactsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeContactsResult;
        
        public ChangeContactsResponseBody() {
        }
        
        public ChangeContactsResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeContactsResult) {
            this.ChangeContactsResult = ChangeContactsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDomainContactsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDomainContacts", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequestBody Body;
        
        public GetDomainContactsRequest() {
        }
        
        public GetDomainContactsRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class GetDomainContactsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        public GetDomainContactsRequestBody() {
        }
        
        public GetDomainContactsRequestBody(string domainName) {
            this.domainName = domainName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDomainContactsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDomainContactsResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsResponseBody Body;
        
        public GetDomainContactsResponse() {
        }
        
        public GetDomainContactsResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class GetDomainContactsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.Contacts GetDomainContactsResult;
        
        public GetDomainContactsResponseBody() {
        }
        
        public GetDomainContactsResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.Contacts GetDomainContactsResult) {
            this.GetDomainContactsResult = GetDomainContactsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHostRecordsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHostRecords", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequestBody Body;
        
        public GetHostRecordsRequest() {
        }
        
        public GetHostRecordsRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class GetHostRecordsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        public GetHostRecordsRequestBody() {
        }
        
        public GetHostRecordsRequestBody(string domainName) {
            this.domainName = domainName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHostRecordsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHostRecordsResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsResponseBody Body;
        
        public GetHostRecordsResponse() {
        }
        
        public GetHostRecordsResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class GetHostRecordsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.HostRecords GetHostRecordsResult;
        
        public GetHostRecordsResponseBody() {
        }
        
        public GetHostRecordsResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.HostRecords GetHostRecordsResult) {
            this.GetHostRecordsResult = GetHostRecordsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSARecordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSARecord", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequestBody Body;
        
        public CreateDNSARecordRequest() {
        }
        
        public CreateDNSARecordRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSARecordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ARecord aRecord;
        
        public CreateDNSARecordRequestBody() {
        }
        
        public CreateDNSARecordRequestBody(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.ARecord aRecord) {
            this.domainName = domainName;
            this.aRecord = aRecord;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSARecordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSARecordResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordResponseBody Body;
        
        public CreateDNSARecordResponse() {
        }
        
        public CreateDNSARecordResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSARecordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ARecord CreateDNSARecordResult;
        
        public CreateDNSARecordResponseBody() {
        }
        
        public CreateDNSARecordResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.ARecord CreateDNSARecordResult) {
            this.CreateDNSARecordResult = CreateDNSARecordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSCNAMERecordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSCNAMERecord", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequestBody Body;
        
        public CreateDNSCNAMERecordRequest() {
        }
        
        public CreateDNSCNAMERecordRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSCNAMERecordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CNAMERecord cnameRecord;
        
        public CreateDNSCNAMERecordRequestBody() {
        }
        
        public CreateDNSCNAMERecordRequestBody(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.CNAMERecord cnameRecord) {
            this.domainName = domainName;
            this.cnameRecord = cnameRecord;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSCNAMERecordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSCNAMERecordResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordResponseBody Body;
        
        public CreateDNSCNAMERecordResponse() {
        }
        
        public CreateDNSCNAMERecordResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSCNAMERecordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CNAMERecord CreateDNSCNAMERecordResult;
        
        public CreateDNSCNAMERecordResponseBody() {
        }
        
        public CreateDNSCNAMERecordResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.CNAMERecord CreateDNSCNAMERecordResult) {
            this.CreateDNSCNAMERecordResult = CreateDNSCNAMERecordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSMXRecordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSMXRecord", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequestBody Body;
        
        public CreateDNSMXRecordRequest() {
        }
        
        public CreateDNSMXRecordRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSMXRecordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.MXRecord mxRecord;
        
        public CreateDNSMXRecordRequestBody() {
        }
        
        public CreateDNSMXRecordRequestBody(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.MXRecord mxRecord) {
            this.domainName = domainName;
            this.mxRecord = mxRecord;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSMXRecordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSMXRecordResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordResponseBody Body;
        
        public CreateDNSMXRecordResponse() {
        }
        
        public CreateDNSMXRecordResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSMXRecordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.MXRecord CreateDNSMXRecordResult;
        
        public CreateDNSMXRecordResponseBody() {
        }
        
        public CreateDNSMXRecordResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.MXRecord CreateDNSMXRecordResult) {
            this.CreateDNSMXRecordResult = CreateDNSMXRecordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSAAAARecordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSAAAARecord", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequestBody Body;
        
        public CreateDNSAAAARecordRequest() {
        }
        
        public CreateDNSAAAARecordRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSAAAARecordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.AAAARecord aaaaRecord;
        
        public CreateDNSAAAARecordRequestBody() {
        }
        
        public CreateDNSAAAARecordRequestBody(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.AAAARecord aaaaRecord) {
            this.domainName = domainName;
            this.aaaaRecord = aaaaRecord;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSAAAARecordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSAAAARecordResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordResponseBody Body;
        
        public CreateDNSAAAARecordResponse() {
        }
        
        public CreateDNSAAAARecordResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSAAAARecordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.AAAARecord CreateDNSAAAARecordResult;
        
        public CreateDNSAAAARecordResponseBody() {
        }
        
        public CreateDNSAAAARecordResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.AAAARecord CreateDNSAAAARecordResult) {
            this.CreateDNSAAAARecordResult = CreateDNSAAAARecordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSTXTRecordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSTXTRecord", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequestBody Body;
        
        public CreateDNSTXTRecordRequest() {
        }
        
        public CreateDNSTXTRecordRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSTXTRecordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.TXTRecord txtRecord;
        
        public CreateDNSTXTRecordRequestBody() {
        }
        
        public CreateDNSTXTRecordRequestBody(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.TXTRecord txtRecord) {
            this.domainName = domainName;
            this.txtRecord = txtRecord;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSTXTRecordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSTXTRecordResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordResponseBody Body;
        
        public CreateDNSTXTRecordResponse() {
        }
        
        public CreateDNSTXTRecordResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSTXTRecordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.TXTRecord CreateDNSTXTRecordResult;
        
        public CreateDNSTXTRecordResponseBody() {
        }
        
        public CreateDNSTXTRecordResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.TXTRecord CreateDNSTXTRecordResult) {
            this.CreateDNSTXTRecordResult = CreateDNSTXTRecordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSSRVRecordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSSRVRecord", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequestBody Body;
        
        public CreateDNSSRVRecordRequest() {
        }
        
        public CreateDNSSRVRecordRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSSRVRecordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.SRVRecord srvRecord;
        
        public CreateDNSSRVRecordRequestBody() {
        }
        
        public CreateDNSSRVRecordRequestBody(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.SRVRecord srvRecord) {
            this.domainName = domainName;
            this.srvRecord = srvRecord;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDNSSRVRecordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDNSSRVRecordResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordResponseBody Body;
        
        public CreateDNSSRVRecordResponse() {
        }
        
        public CreateDNSSRVRecordResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class CreateDNSSRVRecordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.SRVRecord CreateDNSSRVRecordResult;
        
        public CreateDNSSRVRecordResponseBody() {
        }
        
        public CreateDNSSRVRecordResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.SRVRecord CreateDNSSRVRecordResult) {
            this.CreateDNSSRVRecordResult = CreateDNSSRVRecordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDNSRecordByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteDNSRecordById", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequestBody Body;
        
        public DeleteDNSRecordByIdRequest() {
        }
        
        public DeleteDNSRecordByIdRequest(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class DeleteDNSRecordByIdRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int recordId;
        
        public DeleteDNSRecordByIdRequestBody() {
        }
        
        public DeleteDNSRecordByIdRequestBody(string domainName, int recordId) {
            this.domainName = domainName;
            this.recordId = recordId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDNSRecordByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteDNSRecordByIdResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdResponseBody Body;
        
        public DeleteDNSRecordByIdResponse() {
        }
        
        public DeleteDNSRecordByIdResponse(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class DeleteDNSRecordByIdResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess DeleteDNSRecordByIdResult;
        
        public DeleteDNSRecordByIdResponseBody() {
        }
        
        public DeleteDNSRecordByIdResponseBody(NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess DeleteDNSRecordByIdResult) {
            this.DeleteDNSRecordByIdResult = DeleteDNSRecordByIdResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDomainManagementChannel : NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DomainManagementClient : System.ServiceModel.ClientBase<NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement>, NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement {
        
        public DomainManagementClient() {
        }
        
        public DomainManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DomainManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DomainManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DomainManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.AccountSearchResult GetAccountDomains(int domainsPerPage, int page) {
            return base.Channel.GetAccountDomains(domainsPerPage, page);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.AccountSearchResult> GetAccountDomainsAsync(int domainsPerPage, int page) {
            return base.Channel.GetAccountDomainsAsync(domainsPerPage, page);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.GetAccountDomain(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequest request) {
            return base.Channel.GetAccountDomain(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.AccountDomain GetAccountDomain(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequestBody();
            inValue.Body.domainName = domainName;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).GetAccountDomain(inValue);
            return retVal.Body.GetAccountDomainResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.GetAccountDomainAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequest request) {
            return base.Channel.GetAccountDomainAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainResponse> GetAccountDomainAsync(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetAccountDomainRequestBody();
            inValue.Body.domainName = domainName;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).GetAccountDomainAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.GetNameServers(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequest request) {
            return base.Channel.GetNameServers(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DNSNameServers GetNameServers(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequestBody();
            inValue.Body.domainName = domainName;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).GetNameServers(inValue);
            return retVal.Body.GetNameServersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.GetNameServersAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequest request) {
            return base.Channel.GetNameServersAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersResponse> GetNameServersAsync(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetNameServersRequestBody();
            inValue.Body.domainName = domainName;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).GetNameServersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.ChangeNameServers(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequest request) {
            return base.Channel.ChangeNameServers(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeNameServers(string domainName, string[] nameservers) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.nameservers = nameservers;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).ChangeNameServers(inValue);
            return retVal.Body.ChangeNameServersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.ChangeNameServersAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequest request) {
            return base.Channel.ChangeNameServersAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersResponse> ChangeNameServersAsync(string domainName, string[] nameservers) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeNameServersRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.nameservers = nameservers;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).ChangeNameServersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.DeleteNameServers(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequest request) {
            return base.Channel.DeleteNameServers(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess DeleteNameServers(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequestBody();
            inValue.Body.domainName = domainName;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).DeleteNameServers(inValue);
            return retVal.Body.DeleteNameServersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.DeleteNameServersAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequest request) {
            return base.Channel.DeleteNameServersAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersResponse> DeleteNameServersAsync(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteNameServersRequestBody();
            inValue.Body.domainName = domainName;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).DeleteNameServersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.ChangeLocking(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequest request) {
            return base.Channel.ChangeLocking(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeLocking(string domainName, bool locked) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.locked = locked;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).ChangeLocking(inValue);
            return retVal.Body.ChangeLockingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.ChangeLockingAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequest request) {
            return base.Channel.ChangeLockingAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingResponse> ChangeLockingAsync(string domainName, bool locked) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeLockingRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.locked = locked;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).ChangeLockingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.ChangePrivacyProtection(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequest request) {
            return base.Channel.ChangePrivacyProtection(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangePrivacyProtection(string domainName, bool privacy) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.privacy = privacy;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).ChangePrivacyProtection(inValue);
            return retVal.Body.ChangePrivacyProtectionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.ChangePrivacyProtectionAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequest request) {
            return base.Channel.ChangePrivacyProtectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionResponse> ChangePrivacyProtectionAsync(string domainName, bool privacy) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangePrivacyProtectionRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.privacy = privacy;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).ChangePrivacyProtectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.ChangeAutoRenew(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequest request) {
            return base.Channel.ChangeAutoRenew(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeAutoRenew(string domainName, bool autoRenew) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.autoRenew = autoRenew;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).ChangeAutoRenew(inValue);
            return retVal.Body.ChangeAutoRenewResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.ChangeAutoRenewAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequest request) {
            return base.Channel.ChangeAutoRenewAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewResponse> ChangeAutoRenewAsync(string domainName, bool autoRenew) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeAutoRenewRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.autoRenew = autoRenew;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).ChangeAutoRenewAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.ChangeContacts(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequest request) {
            return base.Channel.ChangeContacts(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess ChangeContacts(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.Contacts contacts) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.contacts = contacts;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).ChangeContacts(inValue);
            return retVal.Body.ChangeContactsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.ChangeContactsAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequest request) {
            return base.Channel.ChangeContactsAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsResponse> ChangeContactsAsync(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.Contacts contacts) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.ChangeContactsRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.contacts = contacts;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).ChangeContactsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.GetDomainContacts(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequest request) {
            return base.Channel.GetDomainContacts(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.Contacts GetDomainContacts(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequestBody();
            inValue.Body.domainName = domainName;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).GetDomainContacts(inValue);
            return retVal.Body.GetDomainContactsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.GetDomainContactsAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequest request) {
            return base.Channel.GetDomainContactsAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsResponse> GetDomainContactsAsync(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetDomainContactsRequestBody();
            inValue.Body.domainName = domainName;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).GetDomainContactsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.GetHostRecords(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequest request) {
            return base.Channel.GetHostRecords(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.HostRecords GetHostRecords(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequestBody();
            inValue.Body.domainName = domainName;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).GetHostRecords(inValue);
            return retVal.Body.GetHostRecordsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.GetHostRecordsAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequest request) {
            return base.Channel.GetHostRecordsAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsResponse> GetHostRecordsAsync(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.GetHostRecordsRequestBody();
            inValue.Body.domainName = domainName;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).GetHostRecordsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSARecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequest request) {
            return base.Channel.CreateDNSARecord(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.ARecord CreateDNSARecord(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.ARecord aRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.aRecord = aRecord;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSARecord(inValue);
            return retVal.Body.CreateDNSARecordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSARecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequest request) {
            return base.Channel.CreateDNSARecordAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordResponse> CreateDNSARecordAsync(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.ARecord aRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSARecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.aRecord = aRecord;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSARecordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSCNAMERecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequest request) {
            return base.Channel.CreateDNSCNAMERecord(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.CNAMERecord CreateDNSCNAMERecord(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.CNAMERecord cnameRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.cnameRecord = cnameRecord;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSCNAMERecord(inValue);
            return retVal.Body.CreateDNSCNAMERecordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSCNAMERecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequest request) {
            return base.Channel.CreateDNSCNAMERecordAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordResponse> CreateDNSCNAMERecordAsync(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.CNAMERecord cnameRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSCNAMERecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.cnameRecord = cnameRecord;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSCNAMERecordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSMXRecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequest request) {
            return base.Channel.CreateDNSMXRecord(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.MXRecord CreateDNSMXRecord(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.MXRecord mxRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.mxRecord = mxRecord;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSMXRecord(inValue);
            return retVal.Body.CreateDNSMXRecordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSMXRecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequest request) {
            return base.Channel.CreateDNSMXRecordAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordResponse> CreateDNSMXRecordAsync(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.MXRecord mxRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSMXRecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.mxRecord = mxRecord;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSMXRecordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSAAAARecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequest request) {
            return base.Channel.CreateDNSAAAARecord(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.AAAARecord CreateDNSAAAARecord(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.AAAARecord aaaaRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.aaaaRecord = aaaaRecord;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSAAAARecord(inValue);
            return retVal.Body.CreateDNSAAAARecordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSAAAARecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequest request) {
            return base.Channel.CreateDNSAAAARecordAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordResponse> CreateDNSAAAARecordAsync(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.AAAARecord aaaaRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSAAAARecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.aaaaRecord = aaaaRecord;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSAAAARecordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSTXTRecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequest request) {
            return base.Channel.CreateDNSTXTRecord(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.TXTRecord CreateDNSTXTRecord(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.TXTRecord txtRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.txtRecord = txtRecord;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSTXTRecord(inValue);
            return retVal.Body.CreateDNSTXTRecordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSTXTRecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequest request) {
            return base.Channel.CreateDNSTXTRecordAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordResponse> CreateDNSTXTRecordAsync(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.TXTRecord txtRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSTXTRecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.txtRecord = txtRecord;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSTXTRecordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSSRVRecord(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequest request) {
            return base.Channel.CreateDNSSRVRecord(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.SRVRecord CreateDNSSRVRecord(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.SRVRecord srvRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.srvRecord = srvRecord;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSSRVRecord(inValue);
            return retVal.Body.CreateDNSSRVRecordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.CreateDNSSRVRecordAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequest request) {
            return base.Channel.CreateDNSSRVRecordAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordResponse> CreateDNSSRVRecordAsync(string domainName, NameBright.DomainApi.Soap.NameBrightDomainManagement.SRVRecord srvRecord) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.CreateDNSSRVRecordRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.srvRecord = srvRecord;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).CreateDNSSRVRecordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdResponse NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.DeleteDNSRecordById(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequest request) {
            return base.Channel.DeleteDNSRecordById(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainManagement.DomainApiSuccess DeleteDNSRecordById(string domainName, int recordId) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.recordId = recordId;
            NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).DeleteDNSRecordById(inValue);
            return retVal.Body.DeleteDNSRecordByIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdResponse> NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement.DeleteDNSRecordByIdAsync(NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequest request) {
            return base.Channel.DeleteDNSRecordByIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdResponse> DeleteDNSRecordByIdAsync(string domainName, int recordId) {
            NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainManagement.DeleteDNSRecordByIdRequestBody();
            inValue.Body.domainName = domainName;
            inValue.Body.recordId = recordId;
            return ((NameBright.DomainApi.Soap.NameBrightDomainManagement.IDomainManagement)(this)).DeleteDNSRecordByIdAsync(inValue);
        }
    }
}
