//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NameBright.DomainApi.Soap.NameBrightDomainPurchasing {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainPurchaseRequest", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Purchasing")]
    [System.SerializableAttribute()]
    public partial class DomainPurchaseRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DomainNameField;
        
        private decimal TotalPriceField;
        
        private int YearsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DomainName {
            get {
                return this.DomainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainNameField, value) != true)) {
                    this.DomainNameField = value;
                    this.RaisePropertyChanged("DomainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Years {
            get {
                return this.YearsField;
            }
            set {
                if ((this.YearsField.Equals(value) != true)) {
                    this.YearsField = value;
                    this.RaisePropertyChanged("Years");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Purchasing")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int OrderIdField;
        
        private NameBright.DomainApi.Soap.NameBrightDomainPurchasing.OrderItem[] OrderItemsField;
        
        private decimal TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.OrderItem[] OrderItems {
            get {
                return this.OrderItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderItemsField, value) != true)) {
                    this.OrderItemsField = value;
                    this.RaisePropertyChanged("OrderItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderItem", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Purchasing")]
    [System.SerializableAttribute()]
    public partial class OrderItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int OrderIdField;
        
        private int OrderItemIdField;
        
        private string ProductTextField;
        
        private decimal TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int OrderItemId {
            get {
                return this.OrderItemIdField;
            }
            set {
                if ((this.OrderItemIdField.Equals(value) != true)) {
                    this.OrderItemIdField = value;
                    this.RaisePropertyChanged("OrderItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ProductText {
            get {
                return this.ProductTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTextField, value) != true)) {
                    this.ProductTextField = value;
                    this.RaisePropertyChanged("ProductText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainAvailability", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Purchasing")]
    [System.SerializableAttribute()]
    public partial class DomainAvailability : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DomainNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeNameField;
        
        private NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainPurchasingStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DomainName {
            get {
                return this.DomainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainNameField, value) != true)) {
                    this.DomainNameField = value;
                    this.RaisePropertyChanged("DomainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductTypeName {
            get {
                return this.ProductTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeNameField, value) != true)) {
                    this.ProductTypeNameField = value;
                    this.RaisePropertyChanged("ProductTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainPurchasingStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainPurchasingStatus", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Purchasing")]
    public enum DomainPurchasingStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvailableForRegistration = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvailableForRenewal = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unavailable = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountFinancialInfo", Namespace="http://schemas.datacontract.org/2004/07/DomainServicesLib.Purchasing")]
    [System.SerializableAttribute()]
    public partial class AccountFinancialInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private decimal AccountBalanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public decimal AccountBalance {
            get {
                return this.AccountBalanceField;
            }
            set {
                if ((this.AccountBalanceField.Equals(value) != true)) {
                    this.AccountBalanceField = value;
                    this.RaisePropertyChanged("AccountBalance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://api.namebright.com", ConfigurationName="NameBrightDomainPurchasing.IDomainPurchasing")]
    public interface IDomainPurchasing {
        
        // CODEGEN: Generating message contract since element name request from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainPurchasing/RegisterDomain", ReplyAction="https://api.namebright.com/IDomainPurchasing/RegisterDomainResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainResponse RegisterDomain(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainPurchasing/RegisterDomain", ReplyAction="https://api.namebright.com/IDomainPurchasing/RegisterDomainResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainResponse> RegisterDomainAsync(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequest request);
        
        // CODEGEN: Generating message contract since element name request from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainPurchasing/RenewDomain", ReplyAction="https://api.namebright.com/IDomainPurchasing/RenewDomainResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainResponse RenewDomain(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainPurchasing/RenewDomain", ReplyAction="https://api.namebright.com/IDomainPurchasing/RenewDomainResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainResponse> RenewDomainAsync(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequest request);
        
        // CODEGEN: Generating message contract since element name domainName from namespace https://api.namebright.com is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainPurchasing/GetDomainAvailability", ReplyAction="https://api.namebright.com/IDomainPurchasing/GetDomainAvailabilityResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityResponse GetDomainAvailability(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainPurchasing/GetDomainAvailability", ReplyAction="https://api.namebright.com/IDomainPurchasing/GetDomainAvailabilityResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityResponse> GetDomainAvailabilityAsync(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainPurchasing/GetAccountFinancialInfo", ReplyAction="https://api.namebright.com/IDomainPurchasing/GetAccountFinancialInfoResponse")]
        NameBright.DomainApi.Soap.NameBrightDomainPurchasing.AccountFinancialInfo GetAccountFinancialInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.namebright.com/IDomainPurchasing/GetAccountFinancialInfo", ReplyAction="https://api.namebright.com/IDomainPurchasing/GetAccountFinancialInfoResponse")]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.AccountFinancialInfo> GetAccountFinancialInfoAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RegisterDomainRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RegisterDomain", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequestBody Body;
        
        public RegisterDomainRequest() {
        }
        
        public RegisterDomainRequest(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class RegisterDomainRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainPurchaseRequest request;
        
        public RegisterDomainRequestBody() {
        }
        
        public RegisterDomainRequestBody(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainPurchaseRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RegisterDomainResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RegisterDomainResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainResponseBody Body;
        
        public RegisterDomainResponse() {
        }
        
        public RegisterDomainResponse(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class RegisterDomainResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.Order RegisterDomainResult;
        
        public RegisterDomainResponseBody() {
        }
        
        public RegisterDomainResponseBody(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.Order RegisterDomainResult) {
            this.RegisterDomainResult = RegisterDomainResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RenewDomainRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RenewDomain", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequestBody Body;
        
        public RenewDomainRequest() {
        }
        
        public RenewDomainRequest(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class RenewDomainRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainPurchaseRequest request;
        
        public RenewDomainRequestBody() {
        }
        
        public RenewDomainRequestBody(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainPurchaseRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RenewDomainResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RenewDomainResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainResponseBody Body;
        
        public RenewDomainResponse() {
        }
        
        public RenewDomainResponse(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class RenewDomainResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.Order RenewDomainResult;
        
        public RenewDomainResponseBody() {
        }
        
        public RenewDomainResponseBody(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.Order RenewDomainResult) {
            this.RenewDomainResult = RenewDomainResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDomainAvailabilityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDomainAvailability", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequestBody Body;
        
        public GetDomainAvailabilityRequest() {
        }
        
        public GetDomainAvailabilityRequest(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class GetDomainAvailabilityRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string domainName;
        
        public GetDomainAvailabilityRequestBody() {
        }
        
        public GetDomainAvailabilityRequestBody(string domainName) {
            this.domainName = domainName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDomainAvailabilityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDomainAvailabilityResponse", Namespace="https://api.namebright.com", Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityResponseBody Body;
        
        public GetDomainAvailabilityResponse() {
        }
        
        public GetDomainAvailabilityResponse(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://api.namebright.com")]
    public partial class GetDomainAvailabilityResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainAvailability GetDomainAvailabilityResult;
        
        public GetDomainAvailabilityResponseBody() {
        }
        
        public GetDomainAvailabilityResponseBody(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainAvailability GetDomainAvailabilityResult) {
            this.GetDomainAvailabilityResult = GetDomainAvailabilityResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDomainPurchasingChannel : NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DomainPurchasingClient : System.ServiceModel.ClientBase<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing>, NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing {
        
        public DomainPurchasingClient() {
        }
        
        public DomainPurchasingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DomainPurchasingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DomainPurchasingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DomainPurchasingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainResponse NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing.RegisterDomain(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequest request) {
            return base.Channel.RegisterDomain(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.Order RegisterDomain(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainPurchaseRequest request) {
            NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequestBody();
            inValue.Body.request = request;
            NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing)(this)).RegisterDomain(inValue);
            return retVal.Body.RegisterDomainResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainResponse> NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing.RegisterDomainAsync(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequest request) {
            return base.Channel.RegisterDomainAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainResponse> RegisterDomainAsync(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainPurchaseRequest request) {
            NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RegisterDomainRequestBody();
            inValue.Body.request = request;
            return ((NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing)(this)).RegisterDomainAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainResponse NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing.RenewDomain(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequest request) {
            return base.Channel.RenewDomain(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.Order RenewDomain(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainPurchaseRequest request) {
            NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequestBody();
            inValue.Body.request = request;
            NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing)(this)).RenewDomain(inValue);
            return retVal.Body.RenewDomainResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainResponse> NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing.RenewDomainAsync(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequest request) {
            return base.Channel.RenewDomainAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainResponse> RenewDomainAsync(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainPurchaseRequest request) {
            NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.RenewDomainRequestBody();
            inValue.Body.request = request;
            return ((NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing)(this)).RenewDomainAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityResponse NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing.GetDomainAvailability(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequest request) {
            return base.Channel.GetDomainAvailability(request);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.DomainAvailability GetDomainAvailability(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequestBody();
            inValue.Body.domainName = domainName;
            NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityResponse retVal = ((NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing)(this)).GetDomainAvailability(inValue);
            return retVal.Body.GetDomainAvailabilityResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityResponse> NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing.GetDomainAvailabilityAsync(NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequest request) {
            return base.Channel.GetDomainAvailabilityAsync(request);
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityResponse> GetDomainAvailabilityAsync(string domainName) {
            NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequest inValue = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequest();
            inValue.Body = new NameBright.DomainApi.Soap.NameBrightDomainPurchasing.GetDomainAvailabilityRequestBody();
            inValue.Body.domainName = domainName;
            return ((NameBright.DomainApi.Soap.NameBrightDomainPurchasing.IDomainPurchasing)(this)).GetDomainAvailabilityAsync(inValue);
        }
        
        public NameBright.DomainApi.Soap.NameBrightDomainPurchasing.AccountFinancialInfo GetAccountFinancialInfo() {
            return base.Channel.GetAccountFinancialInfo();
        }
        
        public System.Threading.Tasks.Task<NameBright.DomainApi.Soap.NameBrightDomainPurchasing.AccountFinancialInfo> GetAccountFinancialInfoAsync() {
            return base.Channel.GetAccountFinancialInfoAsync();
        }
    }
}
